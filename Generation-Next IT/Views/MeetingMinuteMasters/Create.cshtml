@model MonjurTask.Models.ViewModel.MeetingMinute_InputModel

@{
    ViewData["Title"] = "Create Meeting Minute";
}

<for asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div class="container">
        <h6>Meeting Minutes</h6>

        <div class="master-div row">
            <hr />
            <div class="form-group mb-3">
                @* <label asp-for="CustomerType" class="control-label">Customer Type</label> *@
                <div>
                    <label><input type="radio" asp-for="CustomerType" value="Corporate" /> Corporate</label>
                    <label><input type="radio" asp-for="CustomerType" value="Individual" /> Individual</label>
                </div>
            </div>
            <hr />
            <div class="col-6 mt-2">
                <div class="form-group row">
                    <label class="col-3" asp-for="SelectedCustomerName" class="control-label">Customer Name</label>
                    <div class="col-7">
                        <select asp-for="SelectedCustomerName" class="form-control">
                            @foreach (var customer in (IEnumerable<SelectListItem>)(ViewData["Customers"] ?? Enumerable.Empty<SelectListItem>()))
                            {
                                if (customer != null)
                                {
                                    <option value="@customer.Value">@customer.Text</option>
                                }
                                else
                                {
                                    <p style="color: orange;">Warning: Empty Customers list.</p>
                                }
                            }
                        </select>
                        <span class="col-2" asp-validation-for="SelectedCustomerName" class="text-danger"></span>
                    </div>
                </div>

                <!-- Date and Time fields -->
                <div class="form-group row mt-2">
                    <label class="col-3" asp-for="Date" class="control-label">Date</label>
                    <div class="col-3">
                        <input asp-for="Date" class="form-control" />
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <label class="col-1" asp-for="Time" class="control-label">Time</label>
                    <div class="col-3">
                        <input asp-for="Time" class="form-control" />
                        <span asp-validation-for="Time" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mt-2">
                    <label class="col-3 mt-1" asp-for="AttendsFromClient" class="control-label">Attends From Client Side</label>
                    <div class="col-7">
                        <textarea asp-for="AttendsFromClient" class="form-control"></textarea>
                        <span asp-validation-for="AttendsFromClient" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mt-2">
                    <label class="col-3 mt-1" asp-for="AttendsFromHost" class="control-label">Attends From Host Side</label>
                    <div class="col-7">
                        <textarea asp-for="AttendsFromHost" class="form-control"></textarea>
                        <span asp-validation-for="AttendsFromHost" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="col-6">
                <div class="form-group row mt-2">
                    <label class="col-3 mt-3" asp-for="Agenda" class="control-label">Meeting Agenda</label>
                    <div class="col-7">
                        <textarea asp-for="Agenda" class="form-control"></textarea>
                        <span asp-validation-for="Agenda" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mt-2">
                    <label class="col-3 mt-3" asp-for="Discussion" class="control-label">Meeting Discussion</label>
                    <div class="col-7">
                        <textarea asp-for="Discussion" class="form-control"></textarea>
                        <span asp-validation-for="Discussion" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row mt-2">
                    <label class="col-3 mt-3" asp-for="Decision" class="control-label">Meeting Decision</label>
                    <div class="col-7">
                        <textarea asp-for="Decision" class="form-control"></textarea>
                        <span asp-validation-for="Decision" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <hr />
        <div class="col-8">
            <div class="form-group row">
                <label class="col-3" asp-for="ProductServiceID" class="control-label">Interested Product/Service</label>
                <div class="col-7">
                    <select asp-for="ProductServiceID" class="form-control" asp-items="@ViewBag.ProductsServices"></select>
                    <span asp-validation-for="ProductServiceID" class="text-danger"></span>
                </div>
            </div>

            <div class="row mt-2">
                <div class="form-group row col-6">
                    <label class="col-6" asp-for="Quantity" class="control-label">Quantity</label>
                    <div class="col-6">
                        <input asp-for="Quantity" class="form-control" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row col-6">
                    <label class="col-2" asp-for="Unit" class="control-label">Unit</label>
                    <div class="col-7">
                        <input asp-for="Unit" class="form-control" readonly />
                        <span asp-validation-for="Unit" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group col-3"">
                <button type="button" class="btn btn-secondary btn-sm mt-2">Add</button>
            </div>
        </div>

        <hr />

        <div class="col-12">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>SL#</th>
                        <th>Interested Product/Service Name</th>
                        <th>Quantity</th>
                        <th>Unit</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>2</td>
                        <td>Product 2</td>
                        <td>5</td>
                        <td>Units</td>
                        <td>
                            <button type="button" class="btn btn-outline-success btn-sm">Edit</button>
                            <button type="button" class="btn btn-outline-danger btn-sm">Delete</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="row col-4 mt-3 mb-2">
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-secondary btn-sm" />
                <button type="button" class="btn btn-secondary btn-sm">Refresh</button>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Add JavaScript to dynamically load customer names based on radio button selection
        document.addEventListener("DOMContentLoaded", function () {
            var customerDropdown = document.getElementById("SelectedCustomerName");
            var productServiceDropdown = document.getElementById("ProductServiceID");

            document.querySelectorAll('input[name="CustomerType"]').forEach(function (radio) {
                radio.addEventListener("change", function () {
                    // Use AJAX to fetch customer names based on the selected radio button
                    fetch(`/MeetingMinuteMasters/GetCustomerNames?customerType=${this.value}`)
                        .then(response => response.json())
                        .then(data => {
                            // Clear existing options
                            while (customerDropdown.options.length > 0) {
                                customerDropdown.remove(0);
                            }

                            // Add new options
                            data.forEach(customer => {
                                var option = document.createElement("option");
                                option.value = customer.value;
                                option.text = customer.text;
                                customerDropdown.add(option);
                            });
                        })
                        .catch(error => console.error('Error:', error));
                });

                productServiceDropdown.addEventListener("change", function () {
                    console.log("Selected Product:", this.value);

                    fetch(`/MeetingMinuteMasters/GetUnit?productServiceID=${this.value}`)
                        .then(response => response.json())
                        .then(data => {
                            console.log("Unit data:", data);
                            // Update the readonly input field for Unit
                            document.getElementById("Unit").value = data.unit; // Update this line
                        })
                        .catch(error => console.error('Error:', error));
                });
            });
        });



        //for produccts
        // Sample array to store added products
        var addedProducts = [];

        // Function to add a product and update the table
        function addProduct(product) {
            addedProducts.push(product);

            // Reference to the tbody element
            var tbody = document.getElementById('productTableBody');

            // Clear existing rows
            tbody.innerHTML = '';

            // Loop through addedProducts array and create rows
            addedProducts.forEach(function (product, index) {
                var row = tbody.insertRow(index);
                var cellSL = row.insertCell(0);
                var cellName = row.insertCell(1);
                var cellQuantity = row.insertCell(2);
                var cellUnit = row.insertCell(3);
                var cellAction = row.insertCell(4);

                // Assign values to cells
                cellSL.innerHTML = index + 1;
                cellName.innerHTML = product.name; // Assuming your product object has a 'name' property
                cellQuantity.innerHTML = product.quantity; // Assuming your product object has a 'quantity' property
                cellUnit.innerHTML = product.unit; // Assuming your product object has a 'unit' property

                // Action buttons (e.g., edit and delete)
                var editButton = document.createElement('button');
                editButton.type = 'button';
                editButton.className = 'btn btn-outline-success btn-sm';
                editButton.innerHTML = 'Edit';
                // Add logic for edit button click event

                var deleteButton = document.createElement('button');
                deleteButton.type = 'button';
                deleteButton.className = 'btn btn-outline-danger btn-sm';
                deleteButton.innerHTML = 'Delete';
                // Add logic for delete button click event

                // Append buttons to the Action cell
                cellAction.appendChild(editButton);
                cellAction.appendChild(deleteButton);
            });
        }

        // Example of adding a product (call this when a user adds a product)
        var sampleProduct = { name: 'Sample Product', quantity: 5, unit: 'Pieces' };
        addProduct(sampleProduct);

        // Function to handle the 'Add' button click event
        document.addEventListener("DOMContentLoaded", function () {
            var addButton = document.querySelector('.btn-secondary');

            addButton.addEventListener("click", function () {
                // Sample product data (replace this with your form data)
                var newProduct = {
                    name: document.getElementById('ProductServiceID').value,
                    quantity: document.getElementById('Quantity').value,
                    unit: document.getElementById('Unit').value
                };

                // Add the new product to the table
                addProduct(newProduct);
            });
        });
        

    </script>
}




